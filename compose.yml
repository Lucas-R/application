services:
  database:
    image: postgres:15
    container_name: database
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: app
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d app"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - app-network
  backend:
    image: backend:1.0.0
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        EXPORT: 4000
    environment:
      BACKEND_PORT: 4000
      BACKEND_HOST: 0.0.0.0
      DB_HOST: database
      DB_PORT: 5432
      DB_USER: admin
      DB_PASSWORD: admin
      DB_NAME: app
    volumes:
      - ./backend/src:/backend/src
      - /app/node_modules
    ports:
      - 4000:4000
    depends_on:
      - database
    networks:
      - app-network
  frontend:
    image: frontend:1.0.0
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        EXPOSE: 3000
    environment:
      VITE_PORT: 3000
      VITE_HOST: 0.0.0.0
      VITE_BACKEND: http://backend:4000
    volumes:
      - ./frontend/src:/frontend/src
      - /frontend/node_modules
    ports:
      - 3000:3000
    depends_on:
      - database
      - backend
    networks:
      - app-network

volumes:
  database:

networks:
  app-network:
    driver: bridge